#include <windows.h>
#ifdef _APPLE_
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>

float angle = 0.0f;
float delta_angle = 4.0f;

void myInit(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-150, 150, -150, 150);
}

void Display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glPushMatrix();
    glRotatef(angle, 0.0f, 0.0f, 1.0f);
    glColor3f(1.0, 0.0, 0.0);
    glBegin(GL_POLYGON);
    glVertex2f(5, 10);
    glVertex2f(10, 5);
    glVertex2f(10, -5);
    glVertex2f(5, -10);
    glVertex2f(-5, -10);
    glVertex2f(-10, -5);
    glVertex2f(-10, 5);
    glVertex2f(-5, 10);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glScalef(0.6f, 0.6f, 0.6f);
    glRotatef(angle, 0.0f, 0.0f, -1.0f);
    glColor3f(0.0, 0.0, 1.0);
    glBegin(GL_QUADS);
    glVertex2f(-45, 45);
    glVertex2f(-65, 45);
    glVertex2f(-65, 65);
    glVertex2f(-45, 65);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glScalef(1.4f, 1.4f, 1.4f);
    glRotatef(angle, 0.0f, 0.0f, 1.0f);
    glColor3f(0.0, 0.0, 1.0);
    glColor3f(1.0, 1.0, 0.0);
    glBegin(GL_TRIANGLES);
    glVertex2i(45, 45); //a
    glVertex2i(55, 45); //b
    glVertex2i(50, 53); //c
    glColor3f(1.0, 1.0, 0.0);
    glBegin(GL_TRIANGLES);
    glVertex2i(45, 50); //a
    glVertex2i(55, 50); //b
    glVertex2i(50, 42); //c
    glEnd();
    glPopMatrix();

    glutSwapBuffers();
}

void timer(int)
{
    glutPostRedisplay();
    glutTimerFunc(100, timer, 0);

    angle += delta_angle;
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(550, 550);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("ADRIANE ATHALIA - 672019114");
    glutDisplayFunc(Display);
    myInit();
    glutTimerFunc(0, timer, 0);
    glutMainLoop();
    return 0;
}
