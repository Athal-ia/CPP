#include<windows.h>
#include<gl/glut.h>

void init(void);
void tampil(void);
void mouse(int button, int state, int x, int y);
void mouseMotion(int x, int y);
void keyboard(unsigned char, int, int);
void ukuran(int, int);

int is_depth;

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 80);
    glutCreateWindow("BRISTOL UNIVERSITY");
    init();
    glutDisplayFunc(tampil);
    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);
    glutReshapeFunc(ukuran);
    glutMainLoop();
    return 0;
}
void init(void)
{
    glClearColor(0.3, 0.3, 0.3, 0.3);
    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
}

void tampil(void)
{
    if(is_depth)
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    else
        glClear(GL_COLOR_BUFFER_BIT);
    glPushMatrix();

    //pintu depan
    glBegin(GL_LINES);
    glLineWidth(3);
    glColor3f(0.3, 0.1, 0.0);
    glVertex3f(-10, -15, 20);
    glVertex3f(-10, 0, 20);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.2, 0.1, 0.0);
    glVertex3f(-15, -15, 20);
    glVertex3f(-15, 0, 20);
    glVertex3f(-5, 0, 20);
    glVertex3f(-5, -15, 20);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.3, 0.3, 0.3);
    glVertex3f(-15, -12, 20);
    glVertex3f(-15, 0, 20);
    glVertex3f(-18, 0, 20);
    glVertex3f(-18, -12, 20);
    glVertex3f(-5, -12, 20);
    glVertex3f(-5, 0, 20);
    glVertex3f(-2, 0, 20);
    glVertex3f(-2, -12, 20);
    glEnd();
    glBegin(GL_POINTS);
    glPointSize(5);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(-16.5, 3, 20);
    glVertex3f(-12.3, 3, 20);
    glVertex3f(-7.7, 3, 20);
    glVertex3f(-3.5, 3, 20);
    glEnd();

    //jendela depan
    glBegin(GL_LINES);
    glLineWidth(1);
    glColor3f(0.5, 0.5, 0.5);
    glVertex3f(3.5, -9, 20);
    glVertex3f(3.5, -1, 20);
    glVertex3f(7, -9, 20);
    glVertex3f(7, -1, 20);
    glVertex3f(11, -9, 20);
    glVertex3f(11, -1, 20);
    glVertex3f(14.5, -9, 20);
    glVertex3f(14.5, -1, 20);
    glVertex3f(3, -8.5, 20);
    glVertex3f(15, -8.5, 20);
    glVertex3f(3, -1.5, 20);
    glVertex3f(15, -1.5, 20);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.3, 0.3, 0.3);
    glVertex3f(3, -9, 20);
    glVertex3f(3, -1, 20);
    glVertex3f(15, -1, 20);
    glVertex3f(15, -9, 20);
    glEnd();
    glBegin(GL_LINES);
    glLineWidth(5);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(6, 2, 20);
    glVertex3f(12, 2, 20);
    glEnd();

    //depan
    glBegin(GL_QUADS);
    glColor3f(0.9, 0.9, 0.9);
    glVertex3f(-20, -15, 20); //a
    glVertex3f(-20, 5, 20); //b
    glVertex3f(20, 5, 20); //c
    glVertex3f(20, -15, 20); //d
    glEnd();

    //pintu belakang
    glBegin(GL_LINES);
    glLineWidth(2);
    glColor3f(0.3, 0.1, 0.0);
    glVertex3f(3, -7, -20);
    glVertex3f(10, -7, -20);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.2, 0.1, 0.0);
    glVertex3f(3, -15, -20);
    glVertex3f(3, 0, -20);
    glVertex3f(10, 0, -20);
    glVertex3f(10, -15, -20);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.3, 0.3, 0.3);
    glVertex3f(10, -10, -20);
    glVertex3f(10, 0, -20);
    glVertex3f(13, 0, -20);
    glVertex3f(13, -10, -20);
    glEnd();

    //jendela belakang
    glBegin(GL_QUADS);
    glVertex3f(-9, -8, -20);
    glVertex3f(-9, 0, -20);
    glVertex3f(-14, 0, -20);
    glVertex3f(-14, -8, -20);

    //belakang
    glBegin(GL_QUADS);
    glColor3f(0.8, 0.8, 0.8);
    glVertex3f(-20, -15, -20); //e
    glVertex3f(-20, 15, -20); //f
    glVertex3f(20, 15, -20); //g
    glVertex3f(20, -15, -20); //h
    glEnd();

    //kanan1
    glBegin(GL_QUADS);
    glColor3f(0.7, 0.7, 0.7);
    glVertex3f(20, 5, 20); //c
    glVertex3f(20, -15, 20); //d
    glVertex3f(20, -15, 0); //j
    glVertex3f(20, 13, 0); //l
    glEnd();
    //kanan2
    glBegin(GL_QUADS);
    glColor3f(0.7, 0.7, 0.7);
    glVertex3f(20, -15, 0); //j
    glVertex3f(20, 20, 0); //y
    glVertex3f(20, 15, -20); //g
    glVertex3f(20, -15, -20); //h
    glEnd();

    //jendela samping
    glBegin(GL_QUADS);
    glColor3f(0.3, 0.3, 0.3);
    glVertex3f(-20, -8, 15);
    glVertex3f(-20, -8, 5);
    glVertex3f(-20, -1, 5);
    glVertex3f(-20, -1, 15);
    glVertex3f(-20, -8, -15);
    glVertex3f(-20, -8, -5);
    glVertex3f(-20, -1, -5);
    glVertex3f(-20, -1, -15);
    glVertex3f(-20, 13, -12);
    glVertex3f(-20, 13, -7);
    glVertex3f(-20, 10, -7);
    glVertex3f(-20, 10, -12);
    glEnd();
    glBegin(GL_LINES);
    glLineWidth(5);
    glColor3f(0.2, 0.2, 0.2);
    glVertex3f(-20, 1, 7);
    glVertex3f(-20, 1, 13);
    glVertex3f(-20, 1, -7);
    glVertex3f(-20, 1, -13);
    glEnd();

    //kiri1
    glBegin(GL_QUADS);
    glColor3f(0.7, 0.7, 0.7);
    glVertex3f(-20, 5, 20); //b
    glVertex3f(-20, -15, 20); //a
    glVertex3f(-20, -15, 0); //i
    glVertex3f(-20, 13, 0); //k
    glEnd();
    //kiri2
    glBegin(GL_QUADS);
    glColor3f(0.7, 0.7, 0.7);
    glVertex3f(-20, -15, 0); //i
    glVertex3f(-20, 20, 0); //x
    glVertex3f(-20, 15, -20); //f
    glVertex3f(-20, -15, -20); //e
    glEnd();

    //bawah
    glBegin(GL_QUADS);
    glColor3f(0.0, 0.0, 0.0);
    glVertex3f(-20, -15, 20); //a
    glVertex3f(20, -15, 20);  //d
    glVertex3f(20, -15, -20); //h
    glVertex3f(-20, -15, -20); //e
    glEnd();

    //atas1
    glBegin(GL_QUADS);
    glColor3f(0.5, 0.5, 0.5);
    glVertex3f(-23, 4, 23);
    glVertex3f(-23, 13, 0);
    glVertex3f(23, 13, 0);
    glVertex3f(23, 4, 23);
    glEnd();
    //atas2
    glBegin(GL_QUADS);
    glColor3f(0.9, 0.9, 0.9);
    glVertex3f(-20, 13, 0);
    glVertex3f(-20, 20, 0);
    glVertex3f(20, 20, 0);
    glVertex3f(20, 13, 0);
    glEnd();
    //atas3
    glBegin(GL_QUADS);
    glColor3f(0.5, 0.5, 0.5);
    glVertex3f(-23, 21, 3);
    glVertex3f(-23, 14.5, -23);
    glVertex3f(23, 14.5, -23);
    glVertex3f(23, 21, 3);
    glEnd();

    //keset
    glBegin(GL_QUADS);
    glColor3f(0.0, 0.1, 0.8);
    glVertex3f(-14, -15, 19);
    glVertex3f(-14, -15, 13);
    glVertex3f(-6, -15, 13);
    glVertex3f(-6, -15, 19);
    glEnd();

    //kasur
    glBegin(GL_QUADS);
    glColor3f(0.5, 0.1, 1.0);
    glVertex3f(18, -12, 18);
    glVertex3f(18, -12, 8);
    glVertex3f(5, -12, 8);
    glVertex3f(5, -12, 18);
    glEnd();
    glBegin(GL_LINES);
    glColor3f(0.3, 0.0, 0.1);
    glVertex3f(18, -12, 18);
    glVertex3f(18, -15, 18);
    glVertex3f(18, -12, 8);
    glVertex3f(18, -15, 8);
    glVertex3f(5, -12, 8);
    glVertex3f(5, -15, 8);
    glVertex3f(5, -12, 18);
    glVertex3f(5, -15, 18);
    glEnd();
    glBegin(GL_LINE_LOOP);
    glColor3f(0.3, 0.0, 0.1);
    glVertex3f(18, -12, 18);
    glVertex3f(18, -12, 8);
    glVertex3f(5, -12, 8);
    glVertex3f(5, -12, 18);
    glEnd();
    glBegin(GL_QUADS);
    glColor3f(0.3, 0.0, 0.1);
    glVertex3f(18, -12, 18);
    glVertex3f(18, -12, 8);
    glVertex3f(18, -9, 9);
    glVertex3f(18, -9, 17);
    glEnd();

    //meja
    glBegin(GL_QUADS);
    glColor3f(0.9, 0.4, 0.3);
    glVertex3f(-17, -11, -15);
    glVertex3f(-17, -11, -3);
    glVertex3f(-10, -11, -3);
    glVertex3f(-10, -11, -15);
    glEnd();
    glBegin(GL_LINES);
    glColor3f(0.9, 0.4, 0.3);
    glVertex3f(-16.5, -11, -14.5);
    glVertex3f(-16.5, -15, -14.5);
    glVertex3f(-16.5, -11, -3.5);
    glVertex3f(-16.5, -15, -3.5);
    glVertex3f(-10.5, -11, -3.5);
    glVertex3f(-10.5, -15, -3.5);
    glVertex3f(-10.5, -11, -14.5);
    glVertex3f(-10.5, -15, -14.5);
    glEnd();

    //kursi
    glBegin(GL_QUADS);
    glColor3f(0.9, 0.3, 0.2);
    glVertex3f(-5, -12.5, -11.5);
    glVertex3f(-5, -12.5, -6.5);
    glVertex3f(-9, -12.5, -6.5);
    glVertex3f(-9, -12.5, -11.5);
    glEnd();
    glBegin(GL_LINES);
    glColor3f(0.9, 0.3, 0.2);
    glVertex3f(-5.5, -12.5, -11);
    glVertex3f(-5.5, -15, -11);
    glVertex3f(-5.5, -12.5, -7);
    glVertex3f(-5.5, -15, -7);
    glVertex3f(-8.5, -12.5, -7);
    glVertex3f(-8.5, -15, -7);
    glVertex3f(-8.5, -12.5, -11);
    glVertex3f(-8.5, -15, -11);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(0.9, 0.3, 0.2);
    glVertex3f(-5, -12.5, -11.5);
    glVertex3f(-5, -12.5, -6.5);
    glVertex3f(-5, -9.5, -6.5);
    glVertex3f(-5, -7, -7.5);
    glVertex3f(-5, -7, -10.5);
    glVertex3f(-5, -9.5, -11.5);
    glEnd();

    //lemari
    glBegin(GL_QUADS);
    glColor3f(0.0, 0.5, 0.0);
    glVertex3f(19, -15, -16);
    glVertex3f(19, -15, -7);
    glVertex3f(19, -3, -7);
    glVertex3f(19, -3, -16);
    glVertex3f(19, -3, -16);
    glVertex3f(19, -3, -7);
    glVertex3f(16, -3, -7);
    glVertex3f(16, -3, -16);
    glVertex3f(19, -15, -16);
    glVertex3f(19, -3, -16);
    glVertex3f(16, -3, -16);
    glVertex3f(16, -3, -7);
    glVertex3f(19, -15, -7);
    glVertex3f(19, -3, -7);
    glVertex3f(16, -3, -7);
    glVertex3f(16, -15, -7);
    glColor3f(0.0, 0.6, 0.0);
    glVertex3f(19, -15, -16);
    glVertex3f(19, -15, -7);
    glVertex3f(16, -15, -7);
    glVertex3f(16, -15, -16);
    glVertex3f(19, -11, -16);
    glVertex3f(19, -11, -7);
    glVertex3f(16, -11, -7);
    glVertex3f(16, -11, -16);
    glVertex3f(19, -7, -16);
    glVertex3f(19, -7, -7);
    glVertex3f(16, -7, -7);
    glVertex3f(16, -7, -16);
    glEnd();

    //lukisan
    glBegin(GL_QUADS);
    glColor3f(0.7, 0.5, 1.0);
    glVertex3f(-6, 4, -19.9);
    glVertex3f(-6, 1, -19.9);
    glVertex3f(-3, 1, -19.9);
    glVertex3f(-3, 4, -19.9);
    glVertex3f(0, 4, -19.9);
    glVertex3f(0, 1, -19.9);
    glVertex3f(3, 1, -19.9);
    glVertex3f(3, 4, -19.9);
    glVertex3f(0, -2, -19.9);
    glVertex3f(0, 1, -19.9);
    glVertex3f(-3, 1, -19.9);
    glVertex3f(-3, -2, -19.9);
    glVertex3f(6, -2, -19.9);
    glVertex3f(6, 1, -19.9);
    glVertex3f(3, 1, -19.9);
    glVertex3f(3, -2, -19.9);
    glVertex3f(-6, -2, -19.9);
    glVertex3f(-6, -5, -19.9);
    glVertex3f(-3, -5, -19.9);
    glVertex3f(-3, -2, -19.9);
    glVertex3f(0, -2, -19.9);
    glVertex3f(0, -5, -19.9);
    glVertex3f(3, -5, -19.9);
    glVertex3f(3, -2, -19.9);
    glColor3f(1.0, 0.6, 0.9);
    glVertex3f(0, 4, -19.9);
    glVertex3f(0, 1, -19.9);
    glVertex3f(-3, 1, -19.9);
    glVertex3f(-3, 4, -19.9);
    glVertex3f(6, 4, -19.9);
    glVertex3f(6, 1, -19.9);
    glVertex3f(3, 1, -19.9);
    glVertex3f(3, 4, -19.9);
    glVertex3f(-6, -2, -19.9);
    glVertex3f(-6, 1, -19.9);
    glVertex3f(-3, 1, -19.9);
    glVertex3f(-3, -2, -19.9);
    glVertex3f(0, -2, -19.9);
    glVertex3f(0, 1, -19.9);
    glVertex3f(3, 1, -19.9);
    glVertex3f(3, -2, -19.9);
    glVertex3f(0, -2, -19.9);
    glVertex3f(0, -5, -19.9);
    glVertex3f(-3, -5, -19.9);
    glVertex3f(-3, -2, -19.9);
    glVertex3f(6, -2, -19.9);
    glVertex3f(6, -5, -19.9);
    glVertex3f(3, -5, -19.9);
    glVertex3f(3, -2, -19.9);
    glEnd();

    glPopMatrix();
    glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 'w':
    case 'W':
        glTranslatef(0.0, 0.0, 3.0);
        break;
    case 'd':
    case 'D':
        glTranslatef(3.0, 0.0, 0.0);
        break;
    case 's':
    case 'S':
        glTranslatef(0.0, 0.0, -3.0);
        break;
    case 'a':
    case 'A':
        glTranslatef(-3.0, 0.0, 0.0);
        break;
    case '7':
        glTranslatef(0.0, 3.0, 0.0);
        break;
    case '9':
        glTranslatef(0.0, -3.0, 0.0);
        break;
    case '2':
        glRotatef(2.0, 1.0, 0.0, 0.0);
        break;
    case '8':
        glRotatef(-2.0, 1.0, 0.0, 0.0);
        break;
    case '6':
        glRotatef(2.0, 0.0, 1.0, 0.0);
        break;
    case '4':
        glRotatef(-2.0, 0.0, 1.0, 0.0);
        break;
    case '1':
        glRotatef(2.0, 0.0, 0.0, 1.0);
        break;
    case '3':
        glRotatef(-2.0, 0.0, 0.0, 1.0);
        break;
    case '5':
        if (is_depth)
        {
            is_depth = 0;
            glDisable(GL_DEPTH_TEST);
        }
        else
        {
            is_depth = 1;
            glEnable(GL_DEPTH_TEST);
        }
    }
    tampil();
}
float xrot = 0.0f;
float yrot = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;

void identity()
{
    glLoadIdentity();
    gluLookAt(0.0f, 0.0f, 3.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f);
    glRotatef(xrot, 1.0f, 0.0f, 0.0f);
    glRotatef(yrot, 0.0f, 1.0f, 0.0f);
}

void idle()
{
    if (!mouseDown)
    {
        xrot += 0.3f;
        yrot += 0.4f;
    }
    glutPostRedisplay();
}

void mouse(int button, int state, int x, int y)
{

    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        mouseDown = true;
        xdiff = x - yrot;
        ydiff = -y + xrot;
    }
    else
        mouseDown = false;
}

void mouseMotion(int x, int y)
{
    identity();
    if (mouseDown)
    {
        yrot = x - xdiff;
        xrot = y + ydiff;
        glutPostRedisplay();
    }

}
void ukuran(int lebar, int tinggi)
{
    if (tinggi == 0)
        tinggi = 1;
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(50.0, lebar / tinggi, 5.0, 500.0);
    glTranslatef(0.0, -5.0, -150.0);
    glMatrixMode(GL_MODELVIEW);
}
